{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AdminService = /*#__PURE__*/(() => {\n  class AdminService {\n    constructor(http) {\n      this.http = http;\n      this.url = environment.apiURL;\n    }\n    // Method to get the JWT token from localStorage\n    getAuthHeaders() {\n      const token = localStorage.getItem('token');\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token ? `Bearer ${token}` : ''\n      });\n    }\n    getAllTenant() {\n      return this.http.get(`${this.url}/auth/all-tenants`, {\n        headers: this.getAuthHeaders()\n      });\n    }\n    getUserByEmail(email) {\n      return this.http.get(`${this.url}/auth/user-by-email/${email}`, {\n        headers: this.getAuthHeaders()\n      });\n    }\n    getCompanyByEmail(email) {\n      return this.http.get(`${this.url}/auth/user-by-email/${email}`, {\n        headers: this.getAuthHeaders()\n      });\n    }\n    getAllOwner() {\n      return this.http.get(`${this.url}/auth/all-owners`, {\n        headers: this.getAuthHeaders()\n      });\n    }\n    deleteUser(id) {\n      return this.http.delete(`${this.url}/auth/delete-user/${id}`, {\n        responseType: 'text',\n        headers: this.getAuthHeaders()\n      });\n    }\n    getUserById(id) {\n      return this.http.get(`${this.url}/auth/user-by-id/${id}`, {\n        headers: this.getAuthHeaders()\n      });\n    }\n    updateUser(data, id) {\n      return this.http.post(`${this.url}/auth/update-user/${id}`, data, {\n        responseType: 'text',\n        headers: this.getAuthHeaders()\n      });\n    }\n    static #_ = this.ɵfac = function AdminService_Factory(t) {\n      return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AdminService,\n      factory: AdminService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AdminService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}