{"ast":null,"code":"housingCount: string = '';\ngetHousingCount();\n{\n  this.HousingService.countHousing().subscribe(count => {\n    this.housingCount = count;\n  }, error => {\n    console.error('Failed to fetch housing count:', error);\n  });\n}\nexport class DashboardAdminComponent {\n  constructor(router) {\n    this.router = router;\n  }\n  logout() {\n    // Clear user-related data from localStorage\n    localStorage.removeItem('admin');\n    this.router.navigate(['/']);\n  }\n}","map":{"version":3,"names":["housingCount","string","getHousingCount","HousingService","countHousing","subscribe","count","error","console","DashboardAdminComponent","constructor","router","logout","localStorage","removeItem","navigate"],"sources":["G:\\Bureau\\Bureau\\Projet Web\\Frontend\\angular\\src\\app\\dashboard-admin\\dashboard-admin.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Route, Router } from '@angular/router';\r\nimport { HousingService } from '../services/housing.service'; \r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard-admin',\r\n  templateUrl: './dashboard-admin.component.html',\r\n  styleUrls: ['./dashboard-admin.component.scss']\r\n})\r\nhousingCount: string = '';\r\ngetHousingCount() {\r\n  this.HousingService.countHousing().subscribe(count => {\r\n    this.housingCount = count;\r\n  }, error => {\r\n    console.error('Failed to fetch housing count:', error);\r\n  });\r\n}\r\n\r\nexport class DashboardAdminComponent  {\r\n  constructor(private router:Router){\r\n\r\n  }\r\n  logout(): void {\r\n    // Clear user-related data from localStorage\r\n    localStorage.removeItem('admin');\r\nthis.router.navigate(['/']);\r\n  }\r\n}\r\n"],"mappings":"AAWAA,YAAY,EAAEC,MAAM,GAAG,EAAE;AACzBC,eAAe,EAAE;AAAC;EAChB,IAAI,CAACC,cAAc,CAACC,YAAY,EAAE,CAACC,SAAS,CAACC,KAAK,IAAG;IACnD,IAAI,CAACN,YAAY,GAAGM,KAAK;EAC3B,CAAC,EAAEC,KAAK,IAAG;IACTC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;EACxD,CAAC,CAAC;;AAGJ,OAAM,MAAOE,uBAAuB;EAClCC,YAAoBC,MAAa;IAAb,KAAAA,MAAM,GAANA,MAAM;EAE1B;EACAC,MAAMA,CAAA;IACJ;IACAC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IACpC,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}