{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TaskService = /*#__PURE__*/(() => {\n  class TaskService {\n    constructor(http) {\n      this.http = http;\n      this.url = environment.apiURL + '/tasks/tenant';\n    }\n    getAuthHeaders() {\n      const token = localStorage.getItem('token');\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token ? `Bearer ${token}` : ''\n      });\n    }\n    // Fetch tasks for the logged-in user\n    getMyTasks() {\n      return this.http.get(`${this.url}/user`, {\n        headers: this.getAuthHeaders()\n      });\n    }\n    // Create a new task\n    createTask(description, emailto) {\n      return this.http.post(this.url, {\n        description,\n        emailto\n      }, {\n        headers: this.getAuthHeaders()\n      });\n    }\n    finishTask(taskId) {\n      return this.http.put(`${this.url}/finish/${taskId}`, null, {\n        headers: this.getAuthHeaders()\n      });\n    }\n    getAllTasks() {\n      return this.http.get(`${this.url}`, {\n        headers: this.getAuthHeaders()\n      });\n    }\n    static #_ = this.ɵfac = function TaskService_Factory(t) {\n      return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TaskService,\n      factory: TaskService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TaskService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}