{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardAdminComponent = class DashboardAdminComponent {\n  constructor(router, housingService) {\n    this.router = router;\n    this.housingService = housingService;\n    this.housingCount = '';\n  }\n  ngOnInit() {\n    this.getHousingCount();\n  }\n  // Fetch the housing count from the service\n  getHousingCount() {\n    this.housingService.countHousing().subscribe(count => {\n      this.housingCount = count;\n    }, error => {\n      console.error('Failed to fetch housing count:', error);\n    });\n  }\n  // Logout method\n  logout() {\n    // Clear user-related data from localStorage\n    localStorage.removeItem('admin');\n    this.router.navigate(['/']);\n  }\n};\nDashboardAdminComponent = __decorate([Component({\n  selector: 'app-dashboard-admin',\n  templateUrl: './dashboard-admin.component.html',\n  styleUrls: ['./dashboard-admin.component.scss']\n})], DashboardAdminComponent);","map":{"version":3,"names":["Component","DashboardAdminComponent","constructor","router","housingService","housingCount","ngOnInit","getHousingCount","countHousing","subscribe","count","error","console","logout","localStorage","removeItem","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["G:\\Bureau\\Bureau\\Projet Web\\Frontend\\angular\\src\\app\\dashboard-admin\\dashboard-admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HousingService } from '../services/housing.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-admin',\r\n  templateUrl: './dashboard-admin.component.html',\r\n  styleUrls: ['./dashboard-admin.component.scss']\r\n})\r\nexport class DashboardAdminComponent implements OnInit {\r\n  housingCount: string = '';\r\n\r\n  constructor(private router: Router, private housingService: HousingService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getHousingCount();\r\n  }\r\n\r\n  // Fetch the housing count from the service\r\n  getHousingCount(): void {\r\n    this.housingService.countHousing().subscribe(\r\n      (count) => {\r\n        this.housingCount = count;\r\n      },\r\n      (error) => {\r\n        console.error('Failed to fetch housing count:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Logout method\r\n  logout(): void {\r\n    // Clear user-related data from localStorage\r\n    localStorage.removeItem('admin');\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAGlCC,YAAoBC,MAAc,EAAUC,cAA8B;IAAtD,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,cAAc,GAAdA,cAAc;IAF1D,KAAAC,YAAY,GAAW,EAAE;EAEoD;EAE7EC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEA;EACAA,eAAeA,CAAA;IACb,IAAI,CAACH,cAAc,CAACI,YAAY,EAAE,CAACC,SAAS,CACzCC,KAAK,IAAI;MACR,IAAI,CAACL,YAAY,GAAGK,KAAK;IAC3B,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,CACF;EACH;EAEA;EACAE,MAAMA,CAAA;IACJ;IACAC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;CACD;AA3BYf,uBAAuB,GAAAgB,UAAA,EALnCjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,C,EACWnB,uBAAuB,CA2BnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}